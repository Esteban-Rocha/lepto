#!/usr/bin/env node

const path = require('path');
const chalk = require('chalk');
const fs = require('fs')

const lepto = require('../src/lepto.js');
const log = require('../src/log.js');
const loadConfig = require('../src/load-config.js');

const argv = require('minimist')(process.argv.slice(2), {
  alias: {
    i: 'input',
    o: 'output',
    w: 'watch',
    c: 'config',
    l: 'logLevel'
  }
});

let loadedConfig = null;

if (argv.config) {
  const loaded = loadConfig(path.resolve(argv.config), { cli: true });
  if (loaded.success) {
    loadedConfig = loaded;
  }
  else {
    log(['Lepto -', loaded.msg], 'red');
    return;
  }
}
else {
  const jsonConfigResult = loadConfig(path.resolve(process.cwd(), './lepto.config.json'), { cli: true });
  if (jsonConfigResult.success) {
    loadedConfig = newConfigResult;
  }
  else {
    const jsConfigResult = loadConfig(path.resolve(process.cwd(), './lepto.config.js'), { cli: true });
    if (jsConfigResult.success) {
      loadedConfig = jsConfigResult;
    }
  }
}

if (!loadedConfig) {
  log('Lepto - No config file found', 'red');
  return;
}

const cliConfig = {};
const argvOpts = ['input', 'output', 'watch', 'logLevel'];
for (let item of argvOpts) {
  if (typeof argv[item] !== 'undefined') {
    cliConfig[item] = argv[item];
  }
}

lepto(loadedConfig, cliConfig);
